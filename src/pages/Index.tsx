import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [currentScreen, setCurrentScreen] = useState('menu');
  const [character, setCharacter] = useState({
    name: '–ì–µ—Ä–æ–π',
    class: '–í–æ–∏–Ω',
    level: 1,
    hp: 100,
    maxHp: 100,
    mp: 50,
    maxMp: 50,
    exp: 0,
    maxExp: 100,
    stats: {
      strength: 10,
      magic: 5,
      defense: 8,
      speed: 6
    },
    gold: 100,
    items: [
      { name: '–ú–µ—á –Ω–æ–≤–∏—á–∫–∞', type: 'weapon', rarity: 'common' },
      { name: '–ó–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è', type: 'potion', rarity: 'common' },
      { name: '–ö–æ–∂–∞–Ω–∞—è –±—Ä–æ–Ω—è', type: 'armor', rarity: 'common' }
    ]
  });

  const classes = [
    { name: '–í–æ–∏–Ω', description: '–ú–∞—Å—Ç–µ—Ä –±–ª–∏–∂–Ω–µ–≥–æ –±–æ—è', icon: '‚öîÔ∏è' },
    { name: '–ú–∞–≥', description: '–í–ª–∞–¥–µ–µ—Ç –º–∞–≥–∏–µ–π —Å—Ç–∏—Ö–∏–π', icon: 'üßô‚Äç‚ôÇÔ∏è' },
    { name: '–õ—É—á–Ω–∏–∫', description: '–¢–æ—á–Ω—ã–π —Å—Ç—Ä–µ–ª–æ–∫', icon: 'üèπ' },
    { name: '–í–æ—Ä', description: '–ë—ã—Å—Ç—Ä—ã–π –∏ –Ω–µ–∑–∞–º–µ—Ç–Ω—ã–π', icon: 'üó°Ô∏è' }
  ];

  const quests = [
    { name: '–ü–µ—Ä–≤—ã–π —à–∞–≥', description: '–ü–æ–±–µ–¥–∏—Ç—å 5 –≥–æ–±–ª–∏–Ω–æ–≤', progress: 3, max: 5, reward: '50 –∑–æ–ª–æ—Ç–∞' },
    { name: '–°–±–æ—Ä —Ç—Ä–∞–≤', description: '–ù–∞–π—Ç–∏ 10 —Ü–µ–ª–µ–±–Ω—ã—Ö —Ç—Ä–∞–≤', progress: 7, max: 10, reward: '–ó–µ–ª—å–µ –º–∞–Ω—ã' },
    { name: '–ó–∞–≥–∞–¥–æ—á–Ω—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç', description: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –¥—Ä–µ–≤–Ω–∏–π —Ö—Ä–∞–º', progress: 0, max: 1, reward: '–†–µ–¥–∫–∏–π –∞–º—É–ª–µ—Ç' }
  ];

  const renderMainMenu = () => (
    <div className="min-h-screen bg-gradient-to-b from-amber-900 via-amber-800 to-amber-900 flex items-center justify-center pixel-style">
      <div className="text-center space-y-8 p-8">
        <h1 className="text-6xl font-bold text-amber-200 mb-8 tracking-wider" style={{ fontFamily: 'monospace', textShadow: '3px 3px 0px #000' }}>
          PIXEL RPG
        </h1>
        <h2 className="text-2xl text-amber-300 mb-12" style={{ fontFamily: 'monospace', textShadow: '2px 2px 0px #000' }}>
          ADVENTURE
        </h2>
        <div className="space-y-4">
          {['–ù–æ–≤–∞—è –∏–≥—Ä–∞', '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', '–ü–µ—Ä—Å–æ–Ω–∞–∂', '–ö–≤–µ—Å—Ç—ã', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'].map((item, index) => (
            <Button
              key={index}
              onClick={() => {
                if (item === '–ù–æ–≤–∞—è –∏–≥—Ä–∞') setCurrentScreen('character-creation');
                else if (item === '–ü–µ—Ä—Å–æ–Ω–∞–∂') setCurrentScreen('character');
                else if (item === '–ö–≤–µ—Å—Ç—ã') setCurrentScreen('quests');
                else if (item === '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å') setCurrentScreen('game');
              }}
              className="w-48 h-12 bg-amber-700 hover:bg-amber-600 text-amber-100 border-2 border-amber-600 text-lg font-bold pixel-btn"
              style={{ fontFamily: 'monospace', textShadow: '1px 1px 0px #000' }}
            >
              {item}
            </Button>
          ))}
        </div>
      </div>
    </div>
  );

  const renderCharacterCreation = () => (
    <div className="min-h-screen bg-gradient-to-b from-green-900 via-green-800 to-green-900 p-8">
      <div className="max-w-4xl mx-auto">
        <Card className="bg-amber-100 border-4 border-amber-800">
          <CardHeader className="bg-amber-700 text-amber-100">
            <CardTitle className="text-2xl font-bold text-center" style={{ fontFamily: 'monospace' }}>
              –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
            </CardTitle>
          </CardHeader>
          <CardContent className="p-8">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
              <div className="space-y-6">
                <div>
                  <label className="block text-lg font-bold mb-2" style={{ fontFamily: 'monospace' }}>
                    –ò–º—è –≥–µ—Ä–æ—è:
                  </label>
                  <input
                    type="text"
                    value={character.name}
                    onChange={(e) => setCharacter({...character, name: e.target.value})}
                    className="w-full p-3 border-2 border-amber-600 bg-amber-50 font-mono text-lg"
                  />
                </div>
                <div>
                  <label className="block text-lg font-bold mb-4" style={{ fontFamily: 'monospace' }}>
                    –í—ã–±–µ—Ä–∏ –∫–ª–∞—Å—Å:
                  </label>
                  <div className="grid grid-cols-1 gap-3">
                    {classes.map((cls) => (
                      <Button
                        key={cls.name}
                        onClick={() => setCharacter({...character, class: cls.name})}
                        className={`p-4 text-left ${character.class === cls.name ? 'bg-amber-600 text-amber-100' : 'bg-amber-200 text-amber-800'} border-2 border-amber-600 hover:bg-amber-500`}
                      >
                        <div className="flex items-center space-x-3">
                          <span className="text-2xl">{cls.icon}</span>
                          <div>
                            <div className="font-bold text-lg">{cls.name}</div>
                            <div className="text-sm opacity-75">{cls.description}</div>
                          </div>
                        </div>
                      </Button>
                    ))}
                  </div>
                </div>
              </div>
              <div className="space-y-6">
                <div className="bg-amber-200 p-6 border-2 border-amber-600 rounded">
                  <h3 className="text-xl font-bold mb-4" style={{ fontFamily: 'monospace' }}>
                    –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                  </h3>
                  <div className="space-y-3">
                    {Object.entries(character.stats).map(([stat, value]) => (
                      <div key={stat} className="flex justify-between items-center">
                        <span className="font-bold capitalize">{stat === 'strength' ? '–°–∏–ª–∞' : stat === 'magic' ? '–ú–∞–≥–∏—è' : stat === 'defense' ? '–ó–∞—â–∏—Ç–∞' : '–°–∫–æ—Ä–æ—Å—Ç—å'}:</span>
                        <div className="flex items-center space-x-2">
                          <Progress value={value * 10} className="w-24" />
                          <span className="font-mono text-lg">{value}</span>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
                <div className="flex space-x-4">
                  <Button 
                    onClick={() => setCurrentScreen('menu')}
                    className="flex-1 bg-red-600 hover:bg-red-700 text-white font-bold py-3"
                  >
                    –ù–∞–∑–∞–¥
                  </Button>
                  <Button 
                    onClick={() => setCurrentScreen('game')}
                    className="flex-1 bg-green-600 hover:bg-green-700 text-white font-bold py-3"
                  >
                    –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
                  </Button>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );

  const renderCharacterScreen = () => (
    <div className="min-h-screen bg-gradient-to-b from-purple-900 via-purple-800 to-purple-900 p-8">
      <div className="max-w-4xl mx-auto">
        <Card className="bg-amber-100 border-4 border-amber-800">
          <CardHeader className="bg-amber-700 text-amber-100">
            <CardTitle className="text-2xl font-bold text-center" style={{ fontFamily: 'monospace' }}>
              –ü–µ—Ä—Å–æ–Ω–∞–∂: {character.name}
            </CardTitle>
          </CardHeader>
          <CardContent className="p-8">
            <Tabs defaultValue="stats" className="w-full">
              <TabsList className="grid w-full grid-cols-3 bg-amber-200">
                <TabsTrigger value="stats" className="font-bold">–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</TabsTrigger>
                <TabsTrigger value="inventory" className="font-bold">–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å</TabsTrigger>
                <TabsTrigger value="skills" className="font-bold">–ù–∞–≤—ã–∫–∏</TabsTrigger>
              </TabsList>
              
              <TabsContent value="stats" className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="space-y-4">
                    <div className="flex justify-between items-center">
                      <span className="font-bold">–ö–ª–∞—Å—Å:</span>
                      <Badge className="bg-amber-600 text-amber-100">{character.class}</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="font-bold">–£—Ä–æ–≤–µ–Ω—å:</span>
                      <span className="font-mono text-xl">{character.level}</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="font-bold">–ó–æ–ª–æ—Ç–æ:</span>
                      <span className="font-mono text-xl text-yellow-600">{character.gold} ü™ô</span>
                    </div>
                  </div>
                  <div className="space-y-4">
                    <div>
                      <div className="flex justify-between mb-1">
                        <span className="font-bold">HP:</span>
                        <span className="font-mono">{character.hp}/{character.maxHp}</span>
                      </div>
                      <Progress value={(character.hp / character.maxHp) * 100} className="bg-red-200" />
                    </div>
                    <div>
                      <div className="flex justify-between mb-1">
                        <span className="font-bold">MP:</span>
                        <span className="font-mono">{character.mp}/{character.maxMp}</span>
                      </div>
                      <Progress value={(character.mp / character.maxMp) * 100} className="bg-blue-200" />
                    </div>
                    <div>
                      <div className="flex justify-between mb-1">
                        <span className="font-bold">EXP:</span>
                        <span className="font-mono">{character.exp}/{character.maxExp}</span>
                      </div>
                      <Progress value={(character.exp / character.maxExp) * 100} className="bg-green-200" />
                    </div>
                  </div>
                </div>
                
                <div className="bg-amber-200 p-6 border-2 border-amber-600 rounded">
                  <h3 className="text-xl font-bold mb-4">–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h3>
                  <div className="grid grid-cols-2 gap-4">
                    {Object.entries(character.stats).map(([stat, value]) => (
                      <div key={stat} className="flex justify-between items-center">
                        <span className="font-bold capitalize">
                          {stat === 'strength' ? '–°–∏–ª–∞' : stat === 'magic' ? '–ú–∞–≥–∏—è' : stat === 'defense' ? '–ó–∞—â–∏—Ç–∞' : '–°–∫–æ—Ä–æ—Å—Ç—å'}:
                        </span>
                        <div className="flex items-center space-x-2">
                          <Progress value={value * 10} className="w-24" />
                          <span className="font-mono text-lg">{value}</span>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </TabsContent>
              
              <TabsContent value="inventory" className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                  {character.items.map((item, index) => (
                    <Card key={index} className="bg-amber-200 border-2 border-amber-600">
                      <CardContent className="p-4">
                        <div className="flex items-center space-x-3">
                          <span className="text-2xl">
                            {item.type === 'weapon' ? '‚öîÔ∏è' : item.type === 'potion' ? 'üß™' : 'üõ°Ô∏è'}
                          </span>
                          <div>
                            <div className="font-bold">{item.name}</div>
                            <Badge className={`text-xs ${item.rarity === 'common' ? 'bg-gray-500' : 'bg-blue-500'}`}>
                              {item.rarity === 'common' ? '–û–±—ã—á–Ω—ã–π' : '–†–µ–¥–∫–∏–π'}
                            </Badge>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                  ))}
                </div>
                <Button className="w-full bg-amber-600 hover:bg-amber-700 text-amber-100 font-bold py-3">
                  –ú–∞–≥–∞–∑–∏–Ω üõí
                </Button>
              </TabsContent>
              
              <TabsContent value="skills" className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <Card className="bg-amber-200 border-2 border-amber-600">
                    <CardHeader>
                      <CardTitle className="text-lg">–ë–æ–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏</CardTitle>
                    </CardHeader>
                    <CardContent className="space-y-3">
                      {['–£–¥–∞—Ä –º–µ—á–æ–º', '–ë–ª–æ–∫ —â–∏—Ç–æ–º', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É–¥–∞—Ä'].map((skill, index) => (
                        <div key={index} className="flex justify-between items-center">
                          <span className="font-bold">{skill}</span>
                          <div className="flex items-center space-x-2">
                            <Progress value={Math.random() * 100} className="w-20" />
                            <span className="font-mono text-sm">{Math.floor(Math.random() * 10) + 1}</span>
                          </div>
                        </div>
                      ))}
                    </CardContent>
                  </Card>
                  
                  <Card className="bg-amber-200 border-2 border-amber-600">
                    <CardHeader>
                      <CardTitle className="text-lg">–ú–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏</CardTitle>
                    </CardHeader>
                    <CardContent className="space-y-3">
                      {['–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä', '–ò—Å—Ü–µ–ª–µ–Ω–∏–µ', '–©–∏—Ç —Å–≤–µ—Ç–∞'].map((skill, index) => (
                        <div key={index} className="flex justify-between items-center">
                          <span className="font-bold">{skill}</span>
                          <div className="flex items-center space-x-2">
                            <Progress value={Math.random() * 100} className="w-20" />
                            <span className="font-mono text-sm">{Math.floor(Math.random() * 10) + 1}</span>
                          </div>
                        </div>
                      ))}
                    </CardContent>
                  </Card>
                </div>
                <Button className="w-full bg-green-600 hover:bg-green-700 text-white font-bold py-3">
                  –ü–æ—Ç—Ä–∞—Ç–∏—Ç—å –æ—á–∫–∏ –Ω–∞–≤—ã–∫–æ–≤ (5 –¥–æ—Å—Ç—É–ø–Ω–æ)
                </Button>
              </TabsContent>
            </Tabs>
            
            <div className="mt-6 text-center">
              <Button 
                onClick={() => setCurrentScreen('menu')}
                className="bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-8"
              >
                –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );

  const renderQuestsScreen = () => (
    <div className="min-h-screen bg-gradient-to-b from-blue-900 via-blue-800 to-blue-900 p-8">
      <div className="max-w-4xl mx-auto">
        <Card className="bg-amber-100 border-4 border-amber-800">
          <CardHeader className="bg-amber-700 text-amber-100">
            <CardTitle className="text-2xl font-bold text-center" style={{ fontFamily: 'monospace' }}>
              –ñ—É—Ä–Ω–∞–ª –∫–≤–µ—Å—Ç–æ–≤
            </CardTitle>
          </CardHeader>
          <CardContent className="p-8">
            <div className="space-y-4">
              {quests.map((quest, index) => (
                <Card key={index} className="bg-amber-200 border-2 border-amber-600">
                  <CardContent className="p-6">
                    <div className="flex justify-between items-start mb-4">
                      <div>
                        <h3 className="text-xl font-bold">{quest.name}</h3>
                        <p className="text-amber-700">{quest.description}</p>
                      </div>
                      <Badge className="bg-amber-600 text-amber-100">
                        {quest.progress}/{quest.max}
                      </Badge>
                    </div>
                    <div className="space-y-2">
                      <div className="flex justify-between">
                        <span className="font-bold">–ü—Ä–æ–≥—Ä–µ—Å—Å:</span>
                        <span className="font-mono">{quest.progress}/{quest.max}</span>
                      </div>
                      <Progress value={(quest.progress / quest.max) * 100} className="bg-green-200" />
                      <div className="flex justify-between">
                        <span className="font-bold">–ù–∞–≥—Ä–∞–¥–∞:</span>
                        <span className="text-green-600 font-bold">{quest.reward}</span>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
            
            <div className="mt-8 text-center">
              <Button 
                onClick={() => setCurrentScreen('menu')}
                className="bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-8"
              >
                –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );

  const renderGameScreen = () => (
    <div className="min-h-screen bg-gradient-to-b from-green-900 via-green-800 to-green-700 p-4">
      <div className="max-w-6xl mx-auto">
        <div className="grid grid-cols-1 lg:grid-cols-4 gap-4">
          {/* –ì–ª–∞–≤–Ω–æ–µ –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ */}
          <div className="lg:col-span-3">
            <Card className="bg-amber-100 border-4 border-amber-800 h-96">
              <CardContent className="p-8 text-center">
                <h2 className="text-3xl font-bold mb-4" style={{ fontFamily: 'monospace' }}>
                  –ò–≥—Ä–æ–≤–æ–π –º–∏—Ä
                </h2>
                <div className="bg-green-600 h-64 border-2 border-green-800 flex items-center justify-center">
                  <div className="text-center text-white">
                    <Icon name="Trees" size={48} className="mx-auto mb-4" />
                    <p className="text-xl font-bold">–õ–µ—Å –Ω–æ–≤–∏—á–∫–æ–≤</p>
                    <p className="text-sm">–ó–¥–µ—Å—å –≤–æ–¥—è—Ç—Å—è —Å–ª–∞–±—ã–µ –º–æ–Ω—Å—Ç—Ä—ã</p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
          
          {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
          <div className="space-y-4">
            <Card className="bg-amber-100 border-2 border-amber-600">
              <CardHeader className="bg-amber-700 text-amber-100 py-2">
                <CardTitle className="text-sm font-bold">–ü–µ—Ä—Å–æ–Ω–∞–∂</CardTitle>
              </CardHeader>
              <CardContent className="p-4 space-y-2">
                <div className="text-center">
                  <div className="text-2xl mb-2">üßô‚Äç‚ôÇÔ∏è</div>
                  <div className="font-bold text-sm">{character.name}</div>
                  <div className="text-xs text-amber-700">–£—Ä–æ–≤–µ–Ω—å {character.level}</div>
                </div>
                <div className="space-y-1">
                  <div className="flex justify-between text-xs">
                    <span>HP:</span>
                    <span>{character.hp}/{character.maxHp}</span>
                  </div>
                  <Progress value={(character.hp / character.maxHp) * 100} className="h-2 bg-red-200" />
                  <div className="flex justify-between text-xs">
                    <span>MP:</span>
                    <span>{character.mp}/{character.maxMp}</span>
                  </div>
                  <Progress value={(character.mp / character.maxMp) * 100} className="h-2 bg-blue-200" />
                </div>
              </CardContent>
            </Card>
            
            <Card className="bg-amber-100 border-2 border-amber-600">
              <CardHeader className="bg-amber-700 text-amber-100 py-2">
                <CardTitle className="text-sm font-bold">–î–µ–π—Å—Ç–≤–∏—è</CardTitle>
              </CardHeader>
              <CardContent className="p-4 space-y-2">
                {['–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å', '–°—Ä–∞–∂–∞—Ç—å—Å—è', '–û—Ç–¥–æ—Ö–Ω—É—Ç—å', '–ú–∞–≥–∞–∑–∏–Ω'].map((action, index) => (
                  <Button
                    key={index}
                    className="w-full bg-amber-600 hover:bg-amber-700 text-amber-100 text-xs py-2"
                  >
                    {action}
                  </Button>
                ))}
              </CardContent>
            </Card>
          </div>
        </div>
        
        {/* –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å */}
        <div className="mt-4 flex justify-center space-x-4">
          <Button onClick={() => setCurrentScreen('character')} className="bg-purple-600 hover:bg-purple-700 text-white font-bold">
            –ü–µ—Ä—Å–æ–Ω–∞–∂
          </Button>
          <Button onClick={() => setCurrentScreen('quests')} className="bg-blue-600 hover:bg-blue-700 text-white font-bold">
            –ö–≤–µ—Å—Ç—ã
          </Button>
          <Button onClick={() => setCurrentScreen('menu')} className="bg-red-600 hover:bg-red-700 text-white font-bold">
            –ú–µ–Ω—é
          </Button>
        </div>
      </div>
    </div>
  );

  return (
    <div className="pixel-rpg">
      {currentScreen === 'menu' && renderMainMenu()}
      {currentScreen === 'character-creation' && renderCharacterCreation()}
      {currentScreen === 'character' && renderCharacterScreen()}
      {currentScreen === 'quests' && renderQuestsScreen()}
      {currentScreen === 'game' && renderGameScreen()}
    </div>
  );
};

export default Index;